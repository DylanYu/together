package together.activity;import java.io.IOException;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import org.apache.http.client.ClientProtocolException;import org.json.JSONException;import org.json.JSONObject;import together.connectivity.JsonHandler;import together.connectivity.ServerResponse;import together.models.EventMsg;import together.utils.MyConstants;import com.baidu.mapapi.BMapManager;import com.baidu.mapapi.map.LocationData;import com.baidu.mapapi.map.MapController;import com.baidu.mapapi.map.MapView;import com.baidu.mapapi.map.MyLocationOverlay;import com.baidu.platform.comapi.basestruct.GeoPoint;import android.app.Activity;import android.content.Context;import android.content.pm.ActivityInfo;import android.os.AsyncTask;import android.os.Bundle;import android.support.v4.app.FragmentActivity;import android.util.Log;import android.widget.TextView;import android.widget.Toast;public class FollowedMessageActivity extends Activity {	private Context context;	private String eid;	private String place;	private String uid;	private String type;	private String description;	private String longitude;	private String latitude;	private String time;	private TextView message_in_follow;	private MapView mapView;	private BMapManager mMapManager;	private MapController mMapController;	// 所有events	// 存储从服务器获得的所有events信息	private ArrayList<HashMap<String, Object>> mAllEvents;	// 当前event	private HashMap<String, Object> mCurrentEvent;	@Override	public void onCreate(Bundle savedInstanceState) {		Log.v("followmessage", "oncreate");		super.onCreate(savedInstanceState);		mMapManager = ((TogetherApp) getApplication()).getMapManager();		setContentView(R.layout.follow_message);		setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);		context = this;		initUI();		initMap();		//new Thread(new InitMap()).start();		}	protected void onResume() {		super.onResume();		//TODO 将地图定位到当前event//		new LocateEvent().execute(null, null, null);		//从服务器获取所有event信息		new RequestAllEvents().execute(null, null, null);	}	private void initUI() {		eid = (String) getIntent().getSerializableExtra("eid");		place = (String) getIntent().getSerializableExtra("place");		uid = (String) getIntent().getSerializableExtra("uid");		type = (String) getIntent().getSerializableExtra("type");		description = (String) getIntent().getSerializableExtra("description");		time = (String) getIntent().getSerializableExtra("time");		message_in_follow = (TextView) findViewById(R.id.message_in_follow);		message_in_follow.setText("用户 " + uid + " 于 " + time + " 发起了" + "\n"								+ "活动 " + type + " ,  地点: " + place + "\n" 								+ "活动描述：" + description);		mapView = (MapView) findViewById(R.id.followmap);	}	private class LocateEvent extends AsyncTask<Void, Void, Void> {		protected Void doInBackground(Void... params) {			locateEvent();			return null;		}				protected void onPostExecute(Long result) {//			locateEvent();			Toast.makeText(getApplicationContext(), "定位成功", Toast.LENGTH_LONG).show();	     }	}		private class RequestAllEvents extends AsyncTask<Void, Void, ArrayList<HashMap<String, Object>>> {		protected ArrayList<HashMap<String, Object>> doInBackground(Void... params) {			ArrayList<HashMap<String, Object>> result = null;			try {				result = requestAllEvents();			} catch (ClientProtocolException e) {				e.printStackTrace();			} catch (JSONException e) {				e.printStackTrace();			} catch (IOException e) {				e.printStackTrace();			}			return result;		}				protected void onPostExecute(ArrayList<HashMap<String, Object>> result) {			mAllEvents = result;			Toast.makeText(getApplicationContext(), "all events ok", Toast.LENGTH_LONG).show();	     }	}		private void initMap() {		// event经纬度		longitude = (String) getIntent().getSerializableExtra("longitude");		latitude = (String) getIntent().getSerializableExtra("latitude");		mMapController = mapView.getController();		mMapController.enableClick(true);		mMapController.setZoom(12);		mapView.displayZoomControls(true);		// mMapView.setTraffic(true);		// mMapView.setSatellite(true);		mapView.setDoubleClickZooming(true);	}		private void locateEvent() {		/*定位当前event*/		MyLocationOverlay myLocationOverlay = new MyLocationOverlay(mapView);		LocationData locData = new LocationData();		locData.latitude = Double.parseDouble(latitude);		locData.longitude = Double.parseDouble(longitude);		locData.direction = 2.0f;		myLocationOverlay.setData(locData);		mapView.getOverlays().add(myLocationOverlay);		mapView.refresh();		mapView.getController().animateTo(new GeoPoint(				(int)(locData.latitude*1e6), (int)(locData.longitude* 1e6)));	}	private ArrayList<HashMap<String, Object>> requestAllEvents() throws JSONException, ClientProtocolException, IOException {		ArrayList<HashMap<String, Object>> eventsArray = new ArrayList<HashMap<String, Object>>();		/*从服务器获取event信息*/		JSONObject jo = new JSONObject();		//TODO 添加真实的用户信息		jo.put("uid", "0");		jo.put("radius", "0");		String url = MyConstants.SITE + getString(R.string.ListEvent);		String result = ServerResponse.getResponse(url, jo);		JsonHandler jsonHandler = new JsonHandler();		List<EventMsg> msgs = jsonHandler.getMessages(result, "event");		HashMap<String, Object> map;		for (EventMsg p : msgs) {			Log.i("together", ";");			map = getMap(p);			eventsArray.add(map);		}		//Log.i("together", mAllEvents.size()+"");		return eventsArray;	}		private HashMap<String, Object> getMap(EventMsg p) {		HashMap<String, Object> map;		map = new HashMap<String, Object>();		map.put("eid", p.getEid());		map.put("place", p.getPlace());		map.put("uid", p.getUid());		map.put("type", p.getType());		map.put("description", p.getDescription());		map.put("longitude", p.getLongitude());		map.put("latitude", p.getLatitude());		map.put("startDate", p.getStartDate());		map.put("startTime", p.getStartTime());		map.put("endDate", p.getEndDate());		map.put("endTime", p.getEndTime());		return map;	}}